graph after cute inductor
class GraphModule(torch.nn.Module):
    def forward(self, L_x_: "f32[8, 8]"):
        l_x_ = L_x_
        
        # No stacktrace found for following nodes
        rmsnorm_cute = cute_kernels_kernels_rmsnorm_rmsnorm_cute(l_x_, None, 1e-05);  l_x_ = None
        
         # File: /u/mayank98/scratch/kernel-hyperdrive/a.py:10 in forward, code: x = F.rms_norm(x, (x.size(-1),), torch.randn(x.size(-1), device=x.device), eps=eps)
        randn: "f32[8]" = torch.randn(8, device = device(type='cuda', index=0))
        
        # No stacktrace found for following nodes
        rmsnorm_cute_1 = cute_kernels_kernels_rmsnorm_rmsnorm_cute(rmsnorm_cute, randn, 1e-05);  rmsnorm_cute = randn = None
        
         # File: /u/mayank98/scratch/kernel-hyperdrive/a.py:11 in forward, code: x = x * 3
        x_2: "f32[8, 8]" = rmsnorm_cute_1 * 3;  rmsnorm_cute_1 = None
        
         # File: /u/mayank98/scratch/kernel-hyperdrive/a.py:12 in forward, code: x = F.rms_norm(x, (x.size(-1),), torch.randn(x.size(-1), device=x.device), eps=eps)
        randn_1: "f32[8]" = torch.randn(8, device = device(type='cuda', index=0))
        
        # No stacktrace found for following nodes
        rmsnorm_cute_2 = cute_kernels_kernels_rmsnorm_rmsnorm_cute(x_2, randn_1, 1e-05);  x_2 = randn_1 = None
        swiglu_unchunked_cute = cute_kernels_kernels_swiglu_unchunked_swiglu_unchunked_cute(rmsnorm_cute_2, 2, -1);  rmsnorm_cute_2 = None
        
         # File: /u/mayank98/scratch/kernel-hyperdrive/a.py:13 in forward, code: x = x.chunk(2, -1)
        x_4: "f32[8, 4]" = swiglu_unchunked_cute[0]
        y: "f32[8, 4]" = swiglu_unchunked_cute[1];  swiglu_unchunked_cute = None
        
         # File: /u/mayank98/scratch/kernel-hyperdrive/a.py:16 in forward, code: y = F.silu(y) * x
        silu: "f32[8, 4]" = torch.nn.functional.silu(y);  y = None
        y_1: "f32[8, 4]" = silu * x_4;  silu = x_4 = None
        
         # File: /u/mayank98/scratch/kernel-hyperdrive/a.py:17 in forward, code: x = F.rms_norm(y, (x.size(-1),), torch.randn(x.size(-1), device=x.device), eps=eps)
        randn_2: "f32[4]" = torch.randn(4, device = device(type='cuda', index=0))
        
        # No stacktrace found for following nodes
        rmsnorm_cute_3 = cute_kernels_kernels_rmsnorm_rmsnorm_cute(y_1, randn_2, 1e-05);  randn_2 = None
        
         # File: /u/mayank98/scratch/kernel-hyperdrive/a.py:18 in forward, code: y = F.rms_norm(y, (x.size(-1),), torch.randn(x.size(-1), device=x.device), eps=eps)
        randn_3: "f32[4]" = torch.randn(4, device = device(type='cuda', index=0))
        
        # No stacktrace found for following nodes
        rmsnorm_cute_4 = cute_kernels_kernels_rmsnorm_rmsnorm_cute(y_1, randn_3, 1e-05);  y_1 = randn_3 = None
        
         # File: /u/mayank98/scratch/kernel-hyperdrive/a.py:19 in forward, code: y = torch.rms_norm(input=y, normalized_shape=(x.size(-1),), weight=torch.randn(x.size(-1), device=x.device), eps=eps)
        randn_4: "f32[4]" = torch.randn(4, device = device(type='cuda', index=0))
        
        # No stacktrace found for following nodes
        rmsnorm_cute_5 = cute_kernels_kernels_rmsnorm_rmsnorm_cute(weight = randn_4, eps = 1e-05, x = rmsnorm_cute_4);  randn_4 = rmsnorm_cute_4 = None
        
         # File: /u/mayank98/scratch/kernel-hyperdrive/a.py:21 in forward, code: return x + y
        add: "f32[8, 4]" = rmsnorm_cute_3 + rmsnorm_cute_5;  rmsnorm_cute_3 = rmsnorm_cute_5 = None
        return (add,)